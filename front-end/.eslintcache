[{"/Users/admin/Flatiron/code/module-5-project/front-end/src/reportWebVitals.js":"1","/Users/admin/Flatiron/code/module-5-project/front-end/src/App.js":"2","/Users/admin/Flatiron/code/module-5-project/front-end/src/store/index.js":"3","/Users/admin/Flatiron/code/module-5-project/front-end/src/store/reducers/index.js":"4","/Users/admin/Flatiron/code/module-5-project/front-end/src/history/index.js":"5","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/SignUp.js":"6","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/LandingPage.js":"7","/Users/admin/Flatiron/code/module-5-project/front-end/src/index.js":"8","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/SignIn.js":"9","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/MedicalProviderProfile.js":"10","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/PatientIndex.js":"11","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/SearchBar.js":"12","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/PatientForm.js":"13","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/PatientDetailsModal.js":"14","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/EncounterForm.js":"15","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/EncounterDetailsModal.js":"16","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/MedicalProviderEditForm.js":"17","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/NavigationBar.js":"18"},{"size":362,"mtime":1606161175316,"results":"19","hashOfConfig":"20"},{"size":2091,"mtime":1606980532818,"results":"21","hashOfConfig":"20"},{"size":278,"mtime":1606318590316,"results":"22","hashOfConfig":"20"},{"size":10134,"mtime":1607013358389,"results":"23","hashOfConfig":"20"},{"size":83,"mtime":1606252092134,"results":"24","hashOfConfig":"20"},{"size":8426,"mtime":1607012595424,"results":"25","hashOfConfig":"20"},{"size":1171,"mtime":1606972647533,"results":"26","hashOfConfig":"20"},{"size":547,"mtime":1606318606066,"results":"27","hashOfConfig":"20"},{"size":2515,"mtime":1606973059730,"results":"28","hashOfConfig":"20"},{"size":5893,"mtime":1606980367251,"results":"29","hashOfConfig":"20"},{"size":2345,"mtime":1606978740921,"results":"30","hashOfConfig":"20"},{"size":613,"mtime":1606980027448,"results":"31","hashOfConfig":"20"},{"size":5175,"mtime":1606834320112,"results":"32","hashOfConfig":"20"},{"size":1366,"mtime":1607011563919,"results":"33","hashOfConfig":"20"},{"size":25096,"mtime":1607012135005,"results":"34","hashOfConfig":"20"},{"size":1302,"mtime":1606976413029,"results":"35","hashOfConfig":"20"},{"size":9245,"mtime":1607014317272,"results":"36","hashOfConfig":"20"},{"size":1591,"mtime":1606981103888,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"r7aqsr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/admin/Flatiron/code/module-5-project/front-end/src/reportWebVitals.js",[],["86","87"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/App.js",["88"],"import {Provider, useDispatch} from 'react-redux'\nimport {store} from './store'\nimport {Route, Router} from 'react-router'\nimport history from './history'\nimport LandingPage from './components/LandingPage'\nimport SignIn from './components/SignIn'\nimport SignUp from './components/SignUp'\nimport MedicalProviderProfile from './components/MedicalProviderProfile'\nimport PatientIndex from './components/PatientIndex'\nimport React, {useEffect} from 'react'\nimport PatientForm from './components/PatientForm'\nimport EncounterForm from './components/EncounterForm'\nimport MedicalProviderEditForm from './components/MedicalProviderEditForm'\n\n\n//useEffect replaces componentDidMount\n//dispatch replaces setState, passing in action as an argument\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    let getOption = {\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }\n\n    if (localStorage.token) {\n      fetch(\"http://localhost:3000/medical_provider\", getOption).then(response => response.json())\n      .then(medicalProvider => dispatch({type: 'SET_CURRENT_MEDICAL_PROVIDER', medicalProvider}))\n      \n      fetch(\"http://localhost:3000/patients\", getOption).then(response => response.json())\n      .then(patients => dispatch({type: 'SET_PATIENT_INDEX', patients}))\n    }\n  })\n\n  return (\n    <Router history={history}>\n      <Route exact path='/' component={() => <LandingPage/>}/>\n      <Route exact path ='/signup' component={() => <SignUp/>}/>\n      <Route exact path ='/signin' component={() => <SignIn/>}/>\n      <Route exact path ='/medical_provider/profile' component={() => <MedicalProviderProfile/>}/>\n      <Route exact path ='/patient/index' component={() => <PatientIndex/>}/>\n      <Route exact path ='/patient/new' component={() => <PatientForm/>}/>\n      <Route exact path ='/encounter/new' component={() => <EncounterForm/>}/>\n      <Route exact path ='/medical_provider/edit' component={() => <MedicalProviderEditForm/>}/>\n    </Router>\n  );\n}\n\nexport default () => (\n  <Provider store={store}>\n    <App/>\n  </Provider>\n)\n",["89","90"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/store/index.js",[],"/Users/admin/Flatiron/code/module-5-project/front-end/src/store/reducers/index.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"export const initialState = {\n    //sign up\n    signUpNameInput: '',\n    signUpSpecialtyInput: '',\n    signUpEmailInput: '',\n    signUpPasswordInput: '',\n    signUpImageInput: '',\n    signUpCredentialInput: '',\n    signUpPracticeInput: '',\n\n    //sign in\n    signInEmailInput: '',\n    signInPasswordInput: '',\n\n    //logged in user\n    currentMedicalProvider: null,\n    patientIndex: [],\n\n    //search bar\n    searchInput: '',\n\n    //new encounter form\n    createEncounterDateInput: '',\n    createEncounterPatientInput: '',\n    createEncounterChiefComplaintInput: '',\n    createEncounterAcuityInput: '',\n    createEncounterHRInput: '',\n    createEncounterBPInput: '',\n    createEncounterTempInput: '',\n    createEncounterRRInput: '',\n    createEncounterSPO2Input: '',\n    createEncounterOnsetInput: '',\n    createEncounterDurationInput: '',\n    createEncounterLocationInput: '',\n    createEncounterCharacterInput: '',\n    createEncounterSeverityInput: '',\n    createEncounterModifyingFactorsInput: '',\n    createEncounterAssociatedSymptomsInput: '',\n    createEncounterGeneralInput: '',\n    createEncounterVisionInput: '',\n    createEncounterHeadAndNeckInput: '',\n    createEncounterPulmonaryInput: '',\n    createEncounterCardiovascularInput: '',\n    createEncounterGIInput: '',\n    createEncounterGUInput: '',\n    createEncounterHemoOncInput: '',\n    createEncounterOBGYNBreastInput: '',\n    createEncounterNeuroInput: '',\n    createEncounterEndocrineInput: '',\n    createEncounterMusculoskeletalInput: '',\n    createEncounterPsychInput: '',\n    createEncounterSkinHairInput: '',\n    createEncounterAssessmentInput: '',\n    createEncounterTreatmentInput: '',\n\n    //edit medical provider\n    editMedicalProviderNameInput: ''\n}\n\nexport const reducer = (state, action) => {\n    switch(action.type) {\n\n        case \"CHANGE_SIGN_UP_NAME_INPUT\":\n            return {\n                ...state, \n                signUpNameInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_UP_SPECIALTY_INPUT\":\n            return {\n                ...state,\n                signUpSpecialtyInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_UP_EMAIL_INPUT\":\n            return {\n                ...state,\n                signUpEmailInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_UP_PASSWORD_INPUT\":\n            return {\n                ...state,\n                signUpPasswordInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_UP_IMAGE_INPUT\":\n            return {\n                ...state,\n                signUpImageInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_UP_CREDENTIAL_INPUT\":\n            return {\n                ...state,\n                signUpCredentialInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_UP_PRACTICE_INPUT\":\n            return {\n                ...state,\n                signUpPracticeInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_IN_EMAIL_INPUT\":\n            return {\n                ...state,\n                signInEmailInput: action.value\n            }\n        break;\n\n        case \"CHANGE_SIGN_IN_PASSWORD_INPUT\":\n            return {\n                ...state,\n                signInPasswordInput: action.value\n            }\n        break;\n\n        case \"SET_CURRENT_MEDICAL_PROVIDER\":\n            return {\n                ...state,\n                currentMedicalProvider: action.medicalProvider\n            }\n        break;\n\n        case \"SET_PATIENT_INDEX\": \n            return {\n                ...state, \n                patientIndex: action.patients\n            }\n        break;\n\n        case \"CHANGE_SEARCH_INPUT\": \n            return {\n                ...state, \n                searchInput: action.value\n            }\n        break;\n\n        case \"CHANGE_PATIENT_INDEX\": \n            return {\n                ...state, \n                patientIndex: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_DATE_INPUT\": \n            return {\n            ...state, \n            createEncounterDateInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_PATIENT_INPUT\": \n            return {\n            ...state, \n            createEncounterPatientInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_CHIEF_COMPLAINT_INPUT\": \n            return {\n            ...state, \n            createEncounterChiefComplaintInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_ACUITY_INPUT\": \n            return {\n            ...state, \n            createEncounterAcuityInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_HR_INPUT\": \n            return {\n            ...state, \n            createEncounterHRInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_BP_INPUT\": \n            return {\n            ...state, \n            createEncounterBPInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_TEMP_INPUT\": \n            return {\n            ...state, \n            createEncounterTempInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_RR_INPUT\": \n            return {\n            ...state, \n            createEncounterRRInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_SPO2_INPUT\": \n            return {\n            ...state, \n            createEncounterSPO2Input: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_ONSET_INPUT\": \n            return {\n            ...state, \n            createEncounterOnsetInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_DURATION_INPUT\": \n            return {\n            ...state, \n            createEncounterDurationInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_LOCATION_INPUT\": \n            return {\n            ...state, \n            createEncounterLocationInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_CHARACTER_INPUT\": \n            return {\n            ...state, \n            createEncounterCharacterInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_SEVERITY_INPUT\": \n            return {\n            ...state, \n            createEncounterSeverityInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_MODIFYING_FACTORS_INPUT\": \n            return {\n            ...state, \n            createEncounterModifyingFactorsInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_ASSOCIATED_SYMPTOMS_INPUT\": \n            return {\n            ...state, \n            createEncounterAssociatedSymptomsInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_GENERAL_INPUT\": \n            return {\n            ...state, \n            createEncounterGeneralInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_VISION_INPUT\": \n            return {\n            ...state, \n            createEncounterVisionInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_HEAD_AND_NECK_INPUT\": \n            return {\n            ...state, \n            createEncounterHeadAndNeckInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_PULMONARY_INPUT\": \n            return {\n            ...state, \n            createEncounterPulmonaryInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_CARDIOVASCULAR_INPUT\": \n            return {\n            ...state, \n            createEncounterCardiovascularInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_GI_INPUT\": \n            return {\n            ...state, \n            createEncounterGIInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_GU_INPUT\": \n            return {\n            ...state, \n            createEncounterGUInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_HEMO_ONC_INPUT\": \n            return {\n            ...state, \n            createEncounterHemoOncInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_OBGYN_BREAST_INPUT\": \n            return {\n            ...state, \n            createEncounterOBGYNBreastInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_NEURO_INPUT\": \n            return {\n            ...state, \n            createEncounterNeuroInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_ENDOCRINE_INPUT\": \n            return {\n            ...state, \n            createEncounterEndocrineInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_MUSCULOSKELETAL_INPUT\": \n            return {\n            ...state, \n            createEncounterMusculoskeletalInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_PSYCH_INPUT\": \n            return {\n            ...state, \n            createEncounterPsychInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_SKIN_HAIR_INPUT\": \n            return {\n            ...state, \n            createEncounterSkinHairInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_ASSESSMENT_INPUT\": \n            return {\n            ...state, \n            createEncounterAssessmentInput: action.value\n            }\n        break;\n\n        case \"CHANGE_CREATE_ENCOUNTER_TREATMENT_INPUT\": \n            return {\n            ...state, \n            createEncounterTreatmentInput: action.value\n            }\n        break;\n        \n        case \"CHANGE_EDIT_MEDICAL_PROVIDER_NAME_INPUT\": \n            return {\n            ...state, \n            editMedicalProviderNameInput: action.value\n            }\n        break;\n\n    }\n    return state\n\n    \n}\n\n","/Users/admin/Flatiron/code/module-5-project/front-end/src/history/index.js",[],["138","139"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/SignUp.js",[],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/LandingPage.js",["140","141"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/index.js",[],["142","143"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/SignIn.js",[],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/MedicalProviderProfile.js",["144"],"import React from 'react'\nimport history from '../history'\nimport {useSelector} from 'react-redux'\nimport {Button, Jumbotron, Card} from 'react-bootstrap';\nimport NavigationBar from '../components/NavigationBar'\nimport Slider from \"react-slick\";\nimport EncounterDetailsModal from '../components/EncounterDetailsModal.js'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst MedicalProviderProfile = () => {\n    \n    const currentMedicalProvider = useSelector(state => state.currentMedicalProvider)\n    const [modalShow, setModalShow] = React.useState(false)\n\n\n    const toEditProfile = () => {\n        history.push('/medical_provider/edit')\n    }\n\n    const toViewAllPatients = () => {\n        history.push('/patient/index')\n    }\n\n    const toNewPatientForm = () => {\n        history.push('/patient/new')\n    }\n\n    const toNewEncounterForm = () => {\n        history.push('/encounter/new')\n    } \n\n    const handleClick = () => {\n\n    }\n\n    let settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 3,\n        slidesToScroll: 1\n    };\n   \n    return(\n        <div>\n            {currentMedicalProvider ?\n            <div>\n                <div><NavigationBar/></div>\n            <div className=\"mp-profile\">\n                {/* <div><img className=\"mp-image\" src={currentMedicalProvider.image} height=\"200px\"/></div> */}\n                <Jumbotron>\n                    <h1>{currentMedicalProvider.name}, {currentMedicalProvider.credentials}</h1>\n                    <h4>{currentMedicalProvider.specialty}</h4>\n                    <h5>{currentMedicalProvider.practice}</h5>\n                    <br/>\n                    <Button onClick={toEditProfile} variant=\"outline-secondary\">Profile Details</Button>\n                </Jumbotron>\n                <h5>Active Patients</h5> \n                <Slider {...settings}>\n                    {currentMedicalProvider.patients.map(patient => {\n                    return  <Card patient={patient} key={patient.id}>\n                                <Card.Header>{patient.name}</Card.Header>\n                                <Card.Body>\n                                <Card.Title>{patient.name}</Card.Title>\n                        <Card.Subtitle>MRN: {patient.mrn}</Card.Subtitle>\n                        <br/>\n                        <Card.Text>\n                            Date of Birth: {patient.dob} <br/>\n                            Gender: {patient.gender === \"F\" ? \"Female\" : \"Male\"} <br/>\n                         Age: {patient.age} years <br/>\n                        </Card.Text>\n                        <Card.Text>\n                            <small className=\"text-muted\">Insured?: {patient.insured ? \"Yes\" : \"No\"} </small>\n                        </Card.Text>\n                                </Card.Body>\n                                <Button className=\"pt-details-button\" variant=\"outline-secondary\" onClick={null}>View Patient Details</Button>\n                                <Button className=\"pt-assign-button\" variant=\"outline-secondary\" onClick={null}>Remove from My Patients</Button>\n                            </Card>\n                        })}\n                </Slider>\n                <br/>\n                <Button className=\"mp-profile-button\" onClick={toViewAllPatients} variant=\"outline-secondary\">View All Patients</Button>\n                <br/>\n                <br/>\n                <h5>Current Encounters</h5>\n                <Slider {...settings}>\n                    {currentMedicalProvider.encounters.map(encounter => {\n                    return <Card>\n                            <Card.Header>{encounter.chief_complaint}</Card.Header>\n                            <Card.Body>\n                                <Card.Title>{encounter.chief_complaint}</Card.Title>\n                                <Card.Subtitle>Date of Encounter: {encounter.date}</Card.Subtitle>\n                                <Card.Text>\n                                    <small className=\"text-muted\">Acuity: {encounter.acuity} </small>\n                                </Card.Text>\n                            </Card.Body>\n                            <>\n                            <Button className=\"encounter-details-button\" variant=\"outline-secondary\" onClick={() => setModalShow(true)}> View Encounter Details</Button>\n                            <EncounterDetailsModal encounter={encounter} show={modalShow} onHide={() => setModalShow(false)}/>\n                            </>\n                           </Card>})}                    \n                </Slider>\n                <br/>\n                <Button className=\"mp-profile-button\" onClick={toNewEncounterForm} variant=\"outline-secondary\">Create Encounter</Button>\n                <br/>\n                <br/>\n                <h5>Diagnostic Testing</h5>\n                <Slider {...settings}>\n                {currentMedicalProvider.diagnostics.map(diagnostic => {\n                return <Card>\n                        <Card.Header>{diagnostic.description}</Card.Header>\n                        <Card.Body><Card.Title>{diagnostic.description}</Card.Title>\n                                <Card.Subtitle>Date of Diagnostic: {diagnostic.date}</Card.Subtitle>\n                                <Card.Text>\n                                    <small className=\"text-muted\">Status: {diagnostic.received ? \"Received\" : \"Pending\"}</small>\n                                </Card.Text>Abnormalities: {diagnostic.abnormalities}</Card.Body>\n                       </Card>})}                    \n                </Slider>\n                <br/>\n                <Button className=\"mp-profile-button\" nClick={handleClick} variant=\"outline-secondary\">Order Diagnostic Test</Button>               \n            </div>\n            </div>\n            : null}\n        </div>\n    )\n    \n}\n\nexport default MedicalProviderProfile;",["145","146"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/PatientIndex.js",["147","148"],"import React from 'react'\nimport history from '../history'\nimport {useDispatch, useSelector} from 'react-redux'\nimport NavigationBar from '../components/NavigationBar.js'\nimport SearchBar from '../components/SearchBar.js'\nimport {Card, CardColumns, Button} from 'react-bootstrap';\nimport PatientDetailsModal from '../components/PatientDetailsModal.js'\n\nconst PatientIndex = () => {\n    \n    const patientIndex = useSelector(state => state.patientIndex)\n    const searchInput = useSelector(state => state.searchInput)\n    const filterPatientIndex = patientIndex.filter(patient => patient.name.toLowerCase().includes(searchInput.toLowerCase()))\n    const [modalShow, setModalShow] = React.useState(false)\n\n    return(\n        <div>\n            <NavigationBar/>\n            <div className=\"patient-index\">\n            <br/>\n            <SearchBar/>\n            <br/>\n            <br/>\n            <CardColumns>\n            {filterPatientIndex.map(patient => {\n                return (\n                    <Card key={patient.id}>\n                      <Card.Body>\n                        <Card.Title>{patient.name}</Card.Title>\n                        <Card.Subtitle>MRN: {patient.mrn}</Card.Subtitle>\n                        <br/>\n                        <Card.Text>\n                         Date of Birth: {patient.dob} <br/>\n                         Gender: {patient.gender === \"F\" ? \"Female\" : \"Male\"} <br/>\n                         Age: {patient.age} years <br/>\n                        </Card.Text>\n                        <Card.Text>\n                            <small className=\"text-muted\">Insured?: {patient.insured ? \"Yes\" : \"No\"} </small>\n                        </Card.Text>\n                      </Card.Body>\n                      <>\n                        <Button className=\"pt-details-button\" variant=\"outline-secondary\" onClick={() => setModalShow(true)}>View Patient Details</Button>\n                        <Button className=\"pt-assign-button\" variant=\"outline-secondary\" onClick={null}>Assign to My Patients</Button>\n                        <PatientDetailsModal patient={patient} show={modalShow} onHide={() => setModalShow(false)}/>\n                        </>\n                    </Card>\n                    )\n            })}\n            </CardColumns>\n            </div>\n        </div>\n    )\n}\n\nexport default PatientIndex;\n\n",["149","150"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/SearchBar.js",["151","152"],"import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {FormControl, Form, Card} from 'react-bootstrap';\n\n\nconst SearchBar = () => {\n\n    const dispatch = useDispatch()\n\n    const handleSearch = (e) => {\n        dispatch({type: \"CHANGE_SEARCH_INPUT\", value: e.target.value})\n    }\n\n    return(\n    <div>\n            <Form>\n            <h6 className=\"search-title\">Search Patients by Name</h6>\n             <FormControl onChange={(e) => handleSearch(e)} type=\"text\" size=\"lg\" className=\"mr-sm-2\" />\n             <br/>\n            </Form>\n    </div>\n    )\n}\n\nexport default SearchBar;","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/PatientForm.js",["153","154","155","156"],"import React, {useEffect} from 'react'\nimport history from '../history'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Button, Card, Col, Form} from 'react-bootstrap';\n\n\nconst PatientForm = () => {\n\n    const handleSubmit = () => {\n\n    }\n\n    const handleChange = () => {\n\n    }\n\n    return(\n        <div>\n            <div className=\"sign-up-form\">\n            <Card style={{width: '50%'}}>\n                <Card.Body>\n                    <Form onSubmit={(e) => handleSubmit(e)}>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridName\">\n                            <Form.Label>Patient Name</Form.Label>\n                            <Form.Control onChange={(e) => handleChange(e)} type=\"name\" placeholder=\"Enter Patient Full Name\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridSpecialty\">\n                                <Form.Label>Specialty</Form.Label>\n                                <Form.Control onChange={(e) => handleChange(e)} as=\"select\" defaultValue=\"\">\n                                    <option>Select Specialty...</option>\n                                    <option value=\"Emergency Medicine\">Emergency Medicine</option>\n                                    <option value=\"Family Medicine\">Family Medicine</option>\n                                    <option value=\"General Surgery\">General Surgery</option>\n                                    <option value=\"Internal Medicine\">Internal Medicine</option>\n                                    <option value=\"Obstetrics and Gynecology\">Obstetrics and Gynecology</option>\n                                    <option value=\"Pediatric\">Pediatrics</option>\n                                    <option value=\"Psychology\">Psychiatry</option>\n                                    <option value=\"Other\">Other</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmailAddress\">\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control onChange={(e) => handleChange(e)} type=\"email\" placeholder=\"Enter Email Address\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control onChange={(e) => handleChange(e)} type=\"password\" placeholder=\"Enter Password\" />\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridImage\">\n                            <Form.Label>Profile Image</Form.Label>\n                            <Form.Control onChange={(e) => handleChange(e)} type=\"input\" placeholder=\"Enter Profile Image URL\" />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.File onChange={(e) => handleChange(e)} id=\"formControlFileUpload\" label=\"Upload Profile Image\" />\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridPractice\">\n                                <Form.Label>Practice Name</Form.Label>\n                                <Form.Control onChange={(e) => handleChange(e)} type=\"practice\" placeholder=\"Enter Practice Name\" />\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCredentials\">\n                            <Form.Label>Select Provider Credentials: </Form.Label>\n                            <div onChange={(e) => handleChange(e)} key=\"inline-radio\" className=\"mb-3\">\n                            <Form.Check inline value=\"MD\" label=\"Doctor of Medicine (MD)\" type=\"radio\" id=\"inline-radio-1\" />\n                            <Form.Check inline value=\"DO\" label=\"Doctor of Osteopathic Medicine(DO)\" type=\"radio\" id=\"inline-radio-2\" />\n                            <Form.Check inline value=\"DNP\" label=\"Doctor of Nursing Practice (DNP)\" type=\"radio\" id=\"inline-radio-3\" />\n                            <Form.Check inline value=\"NP\" label=\"Nurse Practicioner (NP)\" type=\"radio\" id=\"inline-radio-4\" />\n                            <Form.Check inline value=\"PA\" label=\"Physician Assistant (PA)\" type=\"radio\" id=\"inline-radio-5\" /> \n                            <Form.Check inline value=\"Other\" label=\"Other\" type=\"radio\" id=\"inline-radio-6\" />                    \n                            </div>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Button variant=\"secondary\" type=\"submit\">Create Account</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            </div>\n        </div>\n    )\n}\n\nexport default PatientForm;\n\n","/Users/admin/Flatiron/code/module-5-project/front-end/src/components/PatientDetailsModal.js",[],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/EncounterForm.js",[],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/EncounterDetailsModal.js",[],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/MedicalProviderEditForm.js",["157","158"],"/Users/admin/Flatiron/code/module-5-project/front-end/src/components/NavigationBar.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":53,"column":1,"nodeType":"165","endLine":57,"endColumn":2},{"ruleId":"159","replacedBy":"166"},{"ruleId":"161","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":61,"column":5,"nodeType":"170","messageId":"171","endLine":385,"endColumn":6},{"ruleId":"172","severity":1,"message":"173","line":68,"column":9,"nodeType":"174","messageId":"175","endLine":68,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":75,"column":9,"nodeType":"174","messageId":"175","endLine":75,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":82,"column":9,"nodeType":"174","messageId":"175","endLine":82,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":89,"column":9,"nodeType":"174","messageId":"175","endLine":89,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":96,"column":9,"nodeType":"174","messageId":"175","endLine":96,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":103,"column":9,"nodeType":"174","messageId":"175","endLine":103,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":110,"column":9,"nodeType":"174","messageId":"175","endLine":110,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":117,"column":9,"nodeType":"174","messageId":"175","endLine":117,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":124,"column":9,"nodeType":"174","messageId":"175","endLine":124,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":131,"column":9,"nodeType":"174","messageId":"175","endLine":131,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":138,"column":9,"nodeType":"174","messageId":"175","endLine":138,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":145,"column":9,"nodeType":"174","messageId":"175","endLine":145,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":152,"column":9,"nodeType":"174","messageId":"175","endLine":152,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":159,"column":9,"nodeType":"174","messageId":"175","endLine":159,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":166,"column":9,"nodeType":"174","messageId":"175","endLine":166,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":173,"column":9,"nodeType":"174","messageId":"175","endLine":173,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":180,"column":9,"nodeType":"174","messageId":"175","endLine":180,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":187,"column":9,"nodeType":"174","messageId":"175","endLine":187,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":194,"column":9,"nodeType":"174","messageId":"175","endLine":194,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":201,"column":9,"nodeType":"174","messageId":"175","endLine":201,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":208,"column":9,"nodeType":"174","messageId":"175","endLine":208,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":215,"column":9,"nodeType":"174","messageId":"175","endLine":215,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":222,"column":9,"nodeType":"174","messageId":"175","endLine":222,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":229,"column":9,"nodeType":"174","messageId":"175","endLine":229,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":236,"column":9,"nodeType":"174","messageId":"175","endLine":236,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":243,"column":9,"nodeType":"174","messageId":"175","endLine":243,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":250,"column":9,"nodeType":"174","messageId":"175","endLine":250,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":257,"column":9,"nodeType":"174","messageId":"175","endLine":257,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":264,"column":9,"nodeType":"174","messageId":"175","endLine":264,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":271,"column":9,"nodeType":"174","messageId":"175","endLine":271,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":278,"column":9,"nodeType":"174","messageId":"175","endLine":278,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":285,"column":9,"nodeType":"174","messageId":"175","endLine":285,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":292,"column":9,"nodeType":"174","messageId":"175","endLine":292,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":299,"column":9,"nodeType":"174","messageId":"175","endLine":299,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":306,"column":9,"nodeType":"174","messageId":"175","endLine":306,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":313,"column":9,"nodeType":"174","messageId":"175","endLine":313,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":320,"column":9,"nodeType":"174","messageId":"175","endLine":320,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":327,"column":9,"nodeType":"174","messageId":"175","endLine":327,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":334,"column":9,"nodeType":"174","messageId":"175","endLine":334,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":341,"column":9,"nodeType":"174","messageId":"175","endLine":341,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":348,"column":9,"nodeType":"174","messageId":"175","endLine":348,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":355,"column":9,"nodeType":"174","messageId":"175","endLine":355,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":362,"column":9,"nodeType":"174","messageId":"175","endLine":362,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":369,"column":9,"nodeType":"174","messageId":"175","endLine":369,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":376,"column":9,"nodeType":"174","messageId":"175","endLine":376,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":383,"column":9,"nodeType":"174","messageId":"175","endLine":383,"endColumn":15},{"ruleId":"159","replacedBy":"176"},{"ruleId":"161","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":16,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"182","line":9,"column":11,"nodeType":"180","messageId":"181","endLine":9,"endColumn":33},{"ruleId":"159","replacedBy":"183"},{"ruleId":"161","replacedBy":"184"},{"ruleId":"178","severity":1,"message":"185","line":25,"column":11,"nodeType":"180","messageId":"181","endLine":25,"endColumn":27},{"ruleId":"159","replacedBy":"186"},{"ruleId":"161","replacedBy":"187"},{"ruleId":"178","severity":1,"message":"188","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":15},{"ruleId":"178","severity":1,"message":"189","line":3,"column":9,"nodeType":"180","messageId":"181","endLine":3,"endColumn":20},{"ruleId":"159","replacedBy":"190"},{"ruleId":"161","replacedBy":"191"},{"ruleId":"178","severity":1,"message":"192","line":2,"column":22,"nodeType":"180","messageId":"181","endLine":2,"endColumn":33},{"ruleId":"178","severity":1,"message":"193","line":3,"column":28,"nodeType":"180","messageId":"181","endLine":3,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":1,"column":16,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"188","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":15},{"ruleId":"178","severity":1,"message":"189","line":3,"column":9,"nodeType":"180","messageId":"181","endLine":3,"endColumn":20},{"ruleId":"178","severity":1,"message":"192","line":3,"column":22,"nodeType":"180","messageId":"181","endLine":3,"endColumn":33},{"ruleId":"178","severity":1,"message":"188","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":15},{"ruleId":"178","severity":1,"message":"194","line":10,"column":11,"nodeType":"180","messageId":"181","endLine":10,"endColumn":39},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["195"],["196"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["195"],["196"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'currentMedicalProvider' is assigned a value but never used.",["195"],["196"],"'toNewPatientForm' is assigned a value but never used.",["195"],["196"],"'history' is defined but never used.","'useDispatch' is defined but never used.",["195"],["196"],"'useSelector' is defined but never used.","'Card' is defined but never used.","'editMedicalProviderNameInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]